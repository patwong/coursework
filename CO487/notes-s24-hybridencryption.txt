[CO 487 - S24 - Hybrid Encryption]
symmetric-key encryption
- fast
- any bitstring of the right length is a valid key
- any bitstring of right length is a valid plaintext
	- stream ciphers have no length restrictions on the plaintext
	- block ciphers have fixed-length plaintexts but support modes of operation (e.g. CBC) with arbitrary msg lengths
- security assumptions are based on published analyses and attempted attacks, but not directly linked to "natural" math problems
- typical security assumption: semantic security under chosen plaintext attack (IND-CPA)
- typical attack speed: ~= 2^l operations where l is the key length

public-key encryption:
- slow
- key have special structure - not every bitstring of right length is valid key
- not every bitstring of the right length is a valid plaintext
	message spaces include:
	- (RSA) M = Z*_n = {x in Z_n : gcd(x,n) = 1}
	- (Elgamal) M = Z*_p = {1,...,p-1}
- security assumptions are provably linked to "natural" mathematical problems such as factoring
- typical security assumptions
	RSA: OW-CPA
	Elgamal: semantic security under chosen plaintext attack (IND-CPA)
- typical attack speed: much faster than ~= 2^l operations (where l is key length)

[hybrid encryption]
use public-key encryption to establish shared secret key
use SKE with shared secret key to encrypt data

[hybrid: pros and cons]
advantages
- key management in hybrid encryption is identical to key management in public-key cryptography (no shared secrets)
- performance is close to symmetric-key
- security often improves - hybrid crypt can be more secure than cryptosystems started with

disadvantages
- risk of total break increases - if either PKCS or SKCS broken, hybrid broken



























