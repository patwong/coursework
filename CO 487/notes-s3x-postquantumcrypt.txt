[CO487 - no slides - Post-quantum Cryptography]
NIST IR 8105 - report/overview on PQC
- proposals in 2017
- (draft) standards in 2018-19


NSA - Suite B cryptography
2000: RSA
2009: ECC
2016: PQ

[Quantum Computers]
theorem (mosca): let X = time to transition to PQ, Y = time stuff needs to be secure, Z = time to make a QC
if X + Y > Z => trouble


[NIST IR 8105]
4 main families of PQC
1. lattice based
2. code based
3. hash-based
4 multivariate polynomial
5. isogeny (djao)

[1. lattice]
fix w1, w2,... wm in R^n
L = ZW1 + ZW2 + ... + ZWm
= sum(i:1,m) ai*wi, ai in Z

shortest vector problem (np-complete)
- given wi,...,wm, find Z in L\{0} s.t. Z has the smallest norm


[learning with errors]
public key: A - matrix, sA + e^T
private: s
encrypt: E(Ax, (sA + 2e)x + m)
decrypt: -sAx

theorem (regev): LWE => SVP

[2. code-based]
mceliese (1979)
public key: an error-correcting code, C_0 (usually not disclosed)
- another error-correcting code C
C_0: easy to correct errors
C: hard to correct

private key: an encryption phi: C <-> C_0
encrypt m: vector
m -> c in C
c -> c' = c + e = ciphertext

decrypt: c' in C -> phi(C) in C_0
	C <-- (phi inverse)

[hash-based]
NIST IR 8105: probably use hash-based for signatures
lampert (1979) publickey: H(x0), H(x1)
m in {0,1}
signature of m: x_m
one time signature

merkle trees