[CO 487 - S14 - Message Authentication Code]
defn:
efficiently computable function H: {0,1}^l x {0,1}* -> {0,1}^l
H(k,m) = t

=> keyed hash function
- used for integrity and data origin authentication

no confidentiality or non-repudiation
- anyone with key can create macs (n-r violated)
- e.g. don't know who specifically sent it if it is broadcasted

MAC secure if
- given some tags H(k,mi), message chosen by mi (interaction)
- computationalyl infeasible (computational resources)
- to compute (with non-negligible probability of success) the value of H(k,n) for any message m != mi (goal)

=> secure if EXISTENTIALLY UNFORGEABLE against chosen-message attack

can provide integrity and data origin authentication

CBC w/ fixed length input is secure

(m1, t1) => t1 = E(m1)
(t1, t2) t2 = E(t2) = E(E(m1))
then t2 is MAC of message (m1,0)
=> E(E(m1))

[secret prefix method]
H(k,m) = H(k||m)
length extension attack:
- suppose (m,H(k,m)) is known
- suppose that the bitlength of m is a multiple of r
- then H(k,m||m') can be computed for any m'
**just use use Hk(x) (final result) as input to compute H(m')

[secret suffix]
K is appended to the end of the message

