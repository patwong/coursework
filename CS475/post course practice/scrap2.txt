right_neighbour(i,j);
botrig_neighbour(i,j);
toprig_neighbour(i,j);

top_neighbour(i,j);
bottom_neighbour(i,j);


left_neighbour(i,j);
botleft_neighbour(i,j);
topleft_neighbour(i,j);


D((j-1)*M + (M-i+1),(j-1)*M + (M-i+1)) = sum(W((j-1)*M + (M-i+1),:))^(-1/2);


1	2	3
4	5	6
7	8	9

(1,1) = i+(j-1)*m = 1 + 0 = 1
(1,2) = i+(j-1)*m = 1 + (2-1)*3 = 1 + 3 = 4
(2,1) = i+(j-1)*m = 2 + (1-1)*3 = 2
(2,2) = i+(j-1)*m = 2 + (2-1)*3 = 2 + 3 = 5
(3,1) = i+(j-1)*m = 3 + (1-1)*3 = 3

REMEMBER: we look/create/iterate W one way, we iterate through U another way
- top to bottom, left to right